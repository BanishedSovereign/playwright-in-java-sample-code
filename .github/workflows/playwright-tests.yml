name: Playwright Tests

# Trigger the workflow on every push to any branch
on:
  push:
    branches:
      - '**' # Run on pushes to main
  pull_request:
    branches:
      - '**'  # Run on every pull request for any branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 2: Set up JDK 17 (adjust if you're using a different version)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # Step 3: Install Maven 3.9.9
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0
        with:
          checkout-fetch-depth: 0
          java-version: 17
          java-distribution: temurin
          maven-version: 3.9.9

      # Step 4: Verify Maven installation
      - name: Verify Maven version
        run: mvn --version

      # Step 5: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Playwright dependencies
        run: npx playwright install-deps

      # Step 6: Run Maven to execute Playwright tests
      - name: Run Playwright Tests
        run: mvn verify

      # Step 5: Zip the Allure Report
      - name: Zip Allure Report
        if: always()
        run: |
          zip -r allure-report.zip target/site/allure-maven-plugin

      # Step 6: Upload ZIP Artifact
      - name: Upload Allure Report ZIP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report.zip

  reporting:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      # Step 1: Download Allure Report ZIP
      - name: Download Allure Report ZIP
        uses: actions/download-artifact@v4
        with:
          name: allure-report

      # Step 2: Unzip the Allure Report
      - name: Unzip Allure Report
        if: always()
        run: unzip allure-report.zip -d target/site/

      # Step 3: Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/site/allure-maven-plugin